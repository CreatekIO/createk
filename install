#!/usr/bin/env ruby

require 'shellwords'

module Tty
  module_function

  def red
    bold 31
  end

  def green
    bold 32
  end

  def blue
    bold 34
  end

  def yellow
    bold 33
  end

  def grey
    bold 37
  end

  def reset
    escape 0
  end

  def bold(n = 39)
    escape "1;#{n}"
  end

  def underline
    escape "4;39"
  end

  def escape(n)
    "\e[#{n}m" if STDOUT.tty?
  end
end

def ohai(*args)
  puts "#{Tty.blue}==> #{args.shelljoin}#{Tty.reset}"
end

def success(*args)
  puts "#{Tty.green}==> #{args.shelljoin}#{Tty.reset}"
end

def warn(warning)
  puts "#{Tty.red}Warning#{Tty.reset}: #{warning.chomp}"
end

def info(info)
  puts "    #{Tty.grey}#{info}#{Tty.reset}"
end

def alert(message)
  puts "#{Tty.yellow}==> #{message}#{Tty.reset}"
end

def username
  @username ||= `whoami`.strip
end

def run(cmd)
  info cmd
  system cmd
end

################################################################### FileVault ##
ohai 'FileVault:'
if `fdesetup status`.include?('FileVault is On')
  alert 'FileVault: already enabled'
else
  cmd = "sudo fdesetup enable --user #{username}"
  run cmd
  success 'FileVault: enabled'
end


#################################################################### homebrew ##
ohai 'homebrew:'
if system('command -v brew', out: '/dev/null')
  alert 'homebrew: already installed'
else
  cmd = 'TRAVIS=true /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
  run cmd
  success 'homebrew installed'
end

##################################################################### python3 ##
ohai 'python3:'
if system('command -v pip3', out: '/dev/null')
  alert 'python3: already installed'
else
  cmd = 'brew install python3'
  run cmd
  success 'python3: installed'
end

##################################################################### anisble ##
ohai 'ansible:'
if system('command -v ansible-playbook', out: '/dev/null')
  alert 'ansible: already installed'
else
  cmd = 'pip3 install ansible'
  run cmd
  success 'ansible: installed'
end

