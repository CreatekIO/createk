#!/usr/bin/env ruby

module Tty
  module_function

  def red
    bold 31
  end

  def green
    bold 32
  end

  def blue
    bold 34
  end

  def yellow
    escape 33
  end

  def grey
    escape 37
  end

  def reset
    escape 0
  end

  def bold(n = 39)
    escape "1;#{n}"
  end

  def underline
    escape "4;39"
  end

  def escape(n)
    "\e[#{n}m" if STDOUT.tty?
  end
end

class Array
  def shell_s
    cp = dup
    cp.delete_if { |arg| arg.is_a?(Hash) }
    first = cp.shift
    cp.map { |arg| arg.gsub ' ', '\\ ' }.unshift(first).join(' ')
  end
end

def ohai(*args)
  puts "#{Tty.blue}==>#{Tty.bold} #{args.shell_s}#{Tty.reset}"
end

def success(*args)
  puts "#{Tty.green}==> #{args.shell_s}#{Tty.reset}"
end

def warn(warning)
  puts "#{Tty.red}Warning#{Tty.reset}: #{warning.chomp}"
end

def info(info)
  puts "    #{Tty.grey}#{info}#{Tty.reset}"
end

def alert(message)
  puts "#{Tty.yellow}==> #{message}#{Tty.reset}"
end

def username
  @username ||= `whoami`.strip
end

###################################################################### script #
system 'sudo printf ""', out: '/dev/null'

################################################################### Filevault ##
ohai 'Filevault:'
if `fdesetup status`.include?('FileVault is On')
  alert 'Filevault: already enabled'
else
  cmd = "sudo fdesetup enable --user #{username}"
  info cmd
  system cmd
  success 'Filevault: enabled'
end

#################################################################### homebrew ##
ohai 'Homebrew:'
if system 'command -v brew', out: '/dev/null'
  alert 'Hombrew: already installed'
else
  cmd = 'TRAVIS=true /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
  info cmd
  system cmd
  success 'Hombrew: installed'
end

##################################################################### Python3 ##
ohai 'Python3:'
if system 'command -v pip3', out: '/dev/null'
  alert 'Python3: already installed'
else
  cmd = 'brew install python3'
  info cmd
  system cmd
  success 'Python3: installed'
end

##################################################################### Ansible ##
ohai 'Ansible:'
if system 'command -v ansible-playbook', out: '/dev/null'
  alert 'Ansible: already installed'
else
  cmd = 'pip3 install ansible'
  info cmd
  system cmd
  success 'Ansible: installed'
end

tags = ARGV.map { |tag| "--tags #{tag}" }.join(' ')

ohai 'Ansible-playbook:'
cmd = "ansible-playbook -i #{File.join(__dir__, 'inventory')} #{tags} #{File.join(__dir__, 'darwin.yml')}"
info cmd
system cmd
